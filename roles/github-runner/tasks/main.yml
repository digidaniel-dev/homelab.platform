- name: Create runner folder
  file:
    path: "{{ runner_folder }}"
    state: directory

- name: Download the latest runner package
  get_url:
    url: "{{ tar_url }}"
    dest: "{{ runner_folder }}/{{ tar_file }}"
    force: true

- name: Checksum downloaded package
  ansible.builtin.shell: |
    echo "{{ checksum }} {{ runner_folder }}/{{ tar_file }}" | sha256sum -c

- name: Extract the tarball
  ansible.builtin.command: tar xzf ./{{ tar_file }}
  args:
    chdir: "{{ runner_folder }}"

- name: Stop runner service
  ansible.builtin.shell: |
    ./svc.sh stop
  become: true
  args:
    chdir: "{{ runner_folder }}"

- name: Uninstall existing runner service
  ansible.builtin.shell: |
    ./svc.sh uninstall
  become: true
  args:
    chdir: "{{ runner_folder }}"

- name: Remove existing configured runner
  ansible.builtin.shell: |
    ./config.sh remove \
      --unattended \
      --token {{ repo_token }}
  args:
    chdir: "{{ runner_folder }}"

- name: Configure runner
  ansible.builtin.shell: |
    ./config.sh \
      --unattended \
      --url {{ repo_url }} \
      --token {{ repo_token }} \
      --name default
  args:
    chdir: "{{ runner_folder }}"

- name: Install runner service
  ansible.builtin.shell: |
    ./svc.sh install
  become: true
  args:
    chdir: "{{ runner_folder }}"

- name: start runner service
  ansible.builtin.shell: |
    ./svc.sh start
  become: true
  args:
    chdir: "{{ runner_folder }}"
