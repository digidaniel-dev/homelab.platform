---
- name: Ensure required packages exists
  apt:
    name: jq
    state: present

- name: Check if vault is already initialized
  shell: vault status --format=json | jq .initialized
  register: init_result

- name: Check if backup exists
  stat:
    path: "{{ backup_dir }}/latest.snap"
  register: vault_backup
  when: not (init_result.stdout | bool)

- name: Initialize Vault
  shell: |
    vault operator init -key-shares=5 -key-threshold=3 -format=json > {{ backup_dir }}/{{ init_file }}
    jq -r '.unseal_keys_b64[]' {{ backup_dir }}/{{ init_file }} > {{ backup_dir }}/{{ unseal_keys_file }}
    jq -r '.root_token' {{ backup_dir }}/{{ init_file }} > {{ backup_dir }}/{{ root_token_file }}
    chmod 600 {{ backup_dir }}/{{ init_file }}
    chmod 600 {{ backup_dir }}/{{ unseal_keys_file }}
    chmod 600 {{ backup_dir }}/{{ root_token_file }}
  args:
    executable: /bin/bash
  when:
    - not (init_result.stdout | bool)
    - not vault_backup.stat.exists

